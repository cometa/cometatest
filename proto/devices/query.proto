syntax = "proto3";
package cometa.devices;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "devices/params.proto";
import "devices/stored_devices.proto";
import "devices/next_device.proto";
// this line is used by starport scaffolding # 1

option go_package = "cometa/x/devices/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/cometa/devices/params";
  }
  // Queries a StoredDevices by index.
	rpc StoredDevices(QueryGetStoredDevicesRequest) returns (QueryGetStoredDevicesResponse) {
		option (google.api.http).get = "/cometa/devices/stored_devices/{index}";
	}

	// Queries a list of StoredDevices items.
	rpc StoredDevicesAll(QueryAllStoredDevicesRequest) returns (QueryAllStoredDevicesResponse) {
		option (google.api.http).get = "/cometa/devices/stored_devices";
	}

// Queries a NextDevice by index.
	rpc NextDevice(QueryGetNextDeviceRequest) returns (QueryGetNextDeviceResponse) {
		option (google.api.http).get = "/cometa/devices/next_device";
	}
// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetStoredDevicesRequest {
	  string index = 1;

}

message QueryGetStoredDevicesResponse {
	StoredDevices storedDevices = 1 [(gogoproto.nullable) = false];
}

message QueryAllStoredDevicesRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllStoredDevicesResponse {
	repeated StoredDevices storedDevices = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetNextDeviceRequest {}

message QueryGetNextDeviceResponse {
	NextDevice NextDevice = 1 [(gogoproto.nullable) = false];
}
// this line is used by starport scaffolding # 3
